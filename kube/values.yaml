# first run from project root: kubectl create configmap model-tee-env-file --from-env-file=.env

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: model-tee
  labels:
    app.kubernetes.io/name: model-tee
spec:
  selector:
    matchLabels:
      app: model-tee # has to match .spec.template.metadata.labels
  serviceName: model-tee
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: model-tee # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 9999
        runAsGroup: 9999
        runAsNonRoot: true
        runAsUser: 9999
      containers:
        - name: model-tee
          image: lepsalex/model-tee:4.0.0-SNAPSHOT
          imagePullPolicy: Always
          volumeMounts:
            - name: model-tee-app
              mountPath: /usr/src/app/static
            - name: model-tee-google-secret
              mountPath: /usr/src/app/secret
            - name: model-tee-ego-client-credentials
              mountPath: /usr/src/app/ego
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTHONIOENCODING
              value: "UTF-8"
          envFrom:
            - configMapRef:
                name: model-tee-env-file
      volumes:
        - name: model-tee-google-secret
          secret:
            secretName: model-tee-google-key
        - name: model-tee-ego-client-credentials
          secret:
            secretName: model-tee-ego
  volumeClaimTemplates:
    - metadata:
        name: model-tee-app
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi
